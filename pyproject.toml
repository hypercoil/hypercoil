[build-system]
requires = ["setuptools >=61"]
build-backend = "setuptools.build_meta"

[project]
name = "hypercoil"
version = "0.1.0.dev1"
description = "Differentiable programming for neuroimaging analysis"
readme = "file:README.rst"
authors = [
  { name = "PROJECT developers", email = "rastko@stanford.edu" },
]
maintainers = [
  { name = "PROJECT developers", email = "rastko@stanford.edu" },
]
license = { file = "LICENSE" }
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS :: MacOS X",
    "Development Status :: 1 - Planning",
    "Environment :: Console",
    "Environment :: GPU :: NVIDIA CUDA",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
]
requires-python = ">=3.10"
dependencies = [
    "jax >= 0.3.16",
    "equinox >= 0.7.1",
    "numpyro",
    "optax >= 0.1.3",
    "numpy >= 1.22.4",
    "pandas >= 1.4.3",
    "nibabel >= 4.0.1",
    "scipy >= 1.9.0",
    "templateflow >= 0.8.1",
    "lytemaps",
    "click",
    "requests",
]

[project.optional-dependencies]
test = [
    "matplotlib",
    "scikit-image",
    "pingouin",
    "nilearn",
    "communities",
    "brainspace",
    "hypercoil-examples",
    "hyve-examples",
    "pytest",
    "pytest-cov",
    "coverage[toml]",
    "ruff",
    "blue",
]
viz = [
    "hyve >= 0.0.2.dev1",
]
doc = ["sphinx"]

[tool.blue]
line-length = 79
target-version = ["py310"]
exclude = '.*test_.*|__init__.py|__about__.py|.*/downstream/.*|.*/examples/.*'

[project.urls]
"Homepage" = "https://github.com/hypercoil/hypercoil"

[tool.coverage.report]
show_missing = true
skip_covered = true
precision = 2

[tool.coverage.run]
branch = true
omit = [
    '*test*',
    '*__init__*',
]

[tool.ruff]
ignore = [
    "E501", # line too long, taken care of by blue
    "E741",
    "W605",
]
line-length = 79
select = [
    "E",
    "F",
    "W",
    "I001",
]

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.isort]
section-order = [
    "future",
    "standard-library",
    "jax",
    "ecosystem",
    "third-party",
    "hypercoil",
    "first-party",
    "local-folder",
]
no-lines-before = [
    "standard-library",
    "ecosystem",
    "third-party",
    "first-party",
    "local-folder"
]
split-on-trailing-comma = true
lines-after-imports = 2

[tool.ruff.isort.sections]
jax = ["jax"]
ecosystem = ["equinox", "distrax", "optax"]
hypercoil = ["hypercoil", "hyve"]
